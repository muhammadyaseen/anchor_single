#ifndef _ENCRYPTION_H_
#define _ENCRYPTION_H_

#include "../platform/data_types.h"

#define KEY_LEN 	4

void random_select(uint8* , uint8*);
uint32 encrypt_rc4(uint8* , uint32 );

static const uint8 random_set[64] =
{
   0xD1, 0x98, 0x2F, 0xD0,
   0xB8, 0x6A, 0xBA, 0xF1,
   0x24, 0xB3, 0x08, 0x85,
   0x63, 0x71, 0xA4, 0xF4,
   0x0D, 0x72, 0x71, 0x82,
   0x7B, 0xC2, 0x9C, 0x2A,
   0xC5, 0x28, 0xCA, 0xB8,
   0x8E, 0x60, 0x6C, 0xB0,
   0xD7, 0xBD, 0x78, 0x55,
   0xE6, 0xAA, 0x57, 0x63,
   0x55, 0x2A, 0xB4, 0x11,
   0xA1, 0x7C, 0xB3, 0x63,
   0x2B, 0x74, 0xCE, 0x9B,
   0xAF, 0x6C, 0x7A, 0x28,
   0x3B, 0x6B, 0xC4, 0x66,
   0x61, 0xFB, 0x48, 0x5D
};

//
//
//void encrypt(uint8 code_in , uint8 *key_out);
//void decrypt(uint8 key_in, uint8 *code_out);
//
//static const uint8 password_set[4][256] =
//{
//   {   0xD1, 0x98, 0x2F, 0xD0,
//       0xB8, 0x6A, 0xBA, 0xF1,
//       0x24, 0xB3, 0x08, 0x85,
//       0x63, 0x71, 0xA4, 0xF4,
//       0x0D, 0x72, 0x71, 0x82,
//       0x7B, 0xC2, 0x9C, 0x2A,
//       0xC5, 0x28, 0xCA, 0xB8,
//       0x8E, 0x60, 0x6C, 0xB0,
//       0xD7, 0xBD, 0x78, 0x55,
//       0xE6, 0xAA, 0x57, 0x63,
//       0x55, 0x2A, 0xB4, 0x11,
//       0xA1, 0x7C, 0xB3, 0x63,
//       0x2B, 0x74, 0xCE, 0x9B,
//       0xAF, 0x6C, 0x7A, 0x28,
//       0x3B, 0x6B, 0xC4, 0x66,
//       0x61, 0xFB, 0x48, 0x5D,
//       0xEF, 0xE9, 0xDC, 0xEB,
//       0x23, 0xD3, 0x0F, 0x83,
//       0x2E, 0xA4, 0x69, 0x9E,
//       0x21, 0xF6, 0x67, 0xAB,
//       0x6A, 0xD8, 0x96, 0xAB,
//       0x6E, 0x13, 0xBA, 0x7E,
//       0xA1, 0x39, 0x66, 0x82,
//       0x8C, 0x45, 0x7D, 0x3B,
//       0xE0, 0x85, 0x40, 0x56,
//       0x4E, 0x36, 0x1B, 0x42,
//       0x37, 0xD0, 0xDB, 0x49,
//       0x07, 0x80, 0x25, 0xF6,
//       0xE3, 0xB6, 0x97, 0x04,
//       0xC1, 0x40, 0x5E, 0x19,
//       0x68, 0x3E, 0x13, 0x3B,
//       0x6D, 0x9B, 0xCC, 0xAF,
//       0xBE, 0xDE, 0x66, 0x19,
//       0xC0, 0x45, 0xD2, 0xB9,
//       0x55, 0x1A, 0xD6, 0x40,
//       0x67, 0xFB, 0x8E, 0xDB,
//       0x3C, 0xFD, 0x2F, 0xAD,
//       0x32, 0xFD, 0x53, 0x3E,
//       0x9E, 0xCA, 0x1A, 0xDF,
//       0xD5, 0x28, 0xAC, 0x8C,
//       0x69, 0xBB, 0xE1, 0xB8,
//       0x10, 0xFD, 0x4A, 0x2D,
//       0x9A, 0xB6, 0xD2, 0x4B,
//       0xE1, 0xA4, 0x62, 0xCE,
//       0xEF, 0x36, 0xD0, 0x2B,
//       0x95, 0xAE, 0xEA, 0x6B,
//       0xD0, 0xAF, 0x8E, 0x8E,
//       0x8F, 0xF2, 0x88, 0x90,
//       0x4F, 0x68, 0xD1, 0xB3,
//       0x2F, 0xBE, 0xEA, 0x8B,
//       0xE5, 0xB5, 0x18, 0xCE,
//       0xB4, 0xFD, 0x7C, 0xD2,
//       0x16, 0x80, 0x93, 0x21,
//       0xE6, 0x77, 0xC7, 0xFB,
//       0xEB, 0x7B, 0xD6, 0xAE,
//       0x00, 0x20, 0x22, 0x57,
//       0x24, 0xF0, 0x55, 0x59,
//       0x78, 0xD9, 0x20, 0x02,
//       0x83, 0x62, 0x11, 0x4E,
//       0xB3, 0x7B, 0x1B, 0x9A,
//       0xD6, 0xBC, 0x2B, 0x81,
//       0x08, 0x57, 0xF2, 0x2A,
//       0xB6, 0xE7, 0xFF, 0xC5,
//       0x53, 0xA9, 0x08, 0x6E   },
//   {   0x4B, 0xB5, 0xDB, 0xC4,
//       0xAD, 0x49, 0x9C, 0x8F,
//       0xEC, 0x69, 0x56, 0xC2,
//       0x19, 0x75, 0xA0, 0xE4,
//       0x3F, 0x5B, 0x6B, 0x99,
//       0xA1, 0xEF, 0x4D, 0xF0,
//       0x4C, 0x84, 0x63, 0x02,
//       0x09, 0x3E, 0x3C, 0x6B,
//       0x68, 0x52, 0xB7, 0xAA,
//       0x3E, 0x7F, 0x8E, 0x57,
//       0xB0, 0xF0, 0xF0, 0x02,
//       0xAE, 0x3C, 0x25, 0xDC,
//       0xD1, 0x7C, 0x94, 0x22,
//       0x3A, 0x37, 0xC8, 0x9A,
//       0xA9, 0x0F, 0xEC, 0xA4,
//       0xE2, 0x3B, 0x32, 0x18,
//       0x4E, 0x4F, 0x6F, 0xF6,
//       0x2C, 0x24, 0x56, 0xBC,
//       0xDE, 0xD9, 0xB3, 0xDC,
//       0x55, 0x2E, 0x50, 0x9F,
//       0x7A, 0x74, 0xBC, 0xE9,
//       0xEC, 0xDB, 0x63, 0xC4,
//       0xEF, 0x32, 0xDD, 0x24,
//       0x12, 0x2A, 0x50, 0x13,
//       0x71, 0x10, 0x81, 0x5F,
//       0x04, 0xD7, 0x3C, 0x59,
//       0xF2, 0x97, 0x9E, 0x1E,
//       0x86, 0xEA, 0x86, 0x5A,
//       0x77, 0x4E, 0x29, 0x99,
//       0x80, 0x52, 0x2E, 0x9C,
//       0xC6, 0x94, 0xA5, 0x1E,
//       0xF2, 0x36, 0x19, 0x19,
//       0x52, 0xF7, 0xEB, 0xEA,
//       0xE3, 0xA6, 0xB1, 0x01,
//       0xC3, 0xBE, 0x65, 0x68,
//       0xEE, 0xDB, 0x2A, 0x5B,
//       0x15, 0x29, 0xEC, 0x61,
//       0x13, 0xEB, 0x03, 0xAA,
//       0xB5, 0x4C, 0xD5, 0xCB,
//       0xEE, 0x60, 0x9C, 0xB2,
//       0x64, 0x19, 0xA0, 0x65,
//       0x40, 0x3C, 0x31, 0xC0,
//       0x9B, 0x87, 0x95, 0x62,
//       0xF8, 0x97, 0x11, 0x16,
//       0x0E, 0xC7, 0x96, 0x78,
//       0x57, 0x1B, 0x9B, 0x1A,
//       0xCD, 0x53, 0x8F, 0x6D,
//       0x58, 0x34, 0xFE, 0xEE,
//       0x5D, 0xE8, 0x42, 0x20,
//       0x45, 0xA3, 0xDB, 0xFA,
//       0xC7, 0xEF, 0x65, 0x41,
//       0xD8, 0x86, 0xE4, 0x3D,
//       0xCF, 0x5B, 0xFC, 0xC1,
//       0x7F, 0x69, 0x47, 0x56,
//       0x09, 0xAD, 0x14, 0x23,
//       0x58, 0x0C, 0x1D, 0x23,
//       0x33, 0x8D, 0xD6, 0x6C,
//       0x7C, 0xCB, 0x40, 0xCE,
//       0xA6, 0x19, 0xE8, 0x61,
//       0xA9, 0xC5, 0x5A, 0x80,
//       0x9E, 0xC3, 0xFD, 0x0E,
//       0xDB, 0x10, 0x67, 0xE3,
//       0xC5, 0x71, 0x3D, 0xF1,
//       0x15, 0x8F, 0xE6, 0xDB   },
//   {   0xE9, 0x94, 0xF6, 0x94,
//       0x41, 0x76, 0xBC, 0xD4,
//       0xD4, 0x33, 0x43, 0x50,
//       0x1E, 0x97, 0x14, 0xBF,
//       0x4D, 0x96, 0x70, 0x66,
//       0xBF, 0x03, 0x7F, 0x31,
//       0x96, 0x55, 0xDA, 0xAB,
//       0x28, 0x53, 0x0A, 0xE9,
//       0x68, 0xD7, 0x68, 0x27,
//       0x4F, 0xE8, 0xB5, 0x7A,
//       0xAA, 0xD3, 0xCE, 0x40,
//       0x20, 0xD9, 0xEE, 0x3B,
//       0x1D, 0x4B, 0x26, 0xEA,
//       0x3A, 0xDD, 0x68, 0xCA,
//       0xFB, 0xD8, 0x45, 0xBA,
//       0x55, 0x20, 0xFE, 0xD0,
//       0x55, 0xA1, 0xCC, 0x99,
//       0xA6, 0x3F, 0x5E, 0x90,
//       0xFD, 0x04, 0x80, 0x05,
//       0x95, 0xE4, 0x48, 0xC7,
//       0x07, 0x41, 0x40, 0x5D,
//       0x32, 0xD5, 0xF2, 0x41,
//       0x25, 0x60, 0xDF, 0x1F,
//       0x0E, 0x02, 0xAF, 0xCA,
//       0x6B, 0x33, 0x3B, 0xEE,
//       0x85, 0xE6, 0xDE, 0x2D,
//       0xD0, 0x95, 0x64, 0xE7,
//       0x54, 0x87, 0xC3, 0xF3,
//       0x0A, 0x99, 0x3A, 0xF4,
//       0xA8, 0xA1, 0x99, 0xDB,
//       0xC6, 0x6D, 0x27, 0xDC,
//       0xF1, 0xCC, 0xB5, 0x69,
//       0x66, 0xCE, 0xA0, 0xD9,
//       0xBB, 0x51, 0x7B, 0x76,
//       0x37, 0xCC, 0x80, 0xF4,
//       0x68, 0xC6, 0x12, 0x78,
//       0x6A, 0xB7, 0x06, 0x4B,
//       0x1A, 0x11, 0x3D, 0xE2,
//       0x44, 0x0A, 0xD9, 0xD5,
//       0x64, 0xDA, 0xBE, 0x64,
//       0x9D, 0xF0, 0x60, 0x60,
//       0xD1, 0xF6, 0x77, 0xD7,
//       0x83, 0xF0, 0xB0, 0x3C,
//       0x77, 0xBD, 0x55, 0xBF,
//       0x4E, 0xF2, 0xF4, 0x87,
//       0x53, 0xC8, 0xB4, 0x46,
//       0x7A, 0x8B, 0x84, 0x91,
//       0x46, 0x20, 0x8C, 0xC9,
//       0xB9, 0xBB, 0x11, 0x75,
//       0xB7, 0xE0, 0x66, 0xC4,
//       0xE8, 0x09, 0x4A, 0x1D,
//       0x1A, 0x0B, 0xA1, 0x28,
//       0xDC, 0x57, 0xA1, 0x4F,
//       0x50, 0xA7, 0xA0, 0x0D,
//       0x9A, 0x77, 0xC3, 0x61,
//       0xF0, 0xC0, 0x00, 0x30,
//       0x11, 0x23, 0x53, 0xC2,
//       0xBB, 0x90, 0xEB, 0xCE,
//       0x6F, 0x4B, 0x39, 0x7C,
//       0x86, 0x72, 0x1A, 0xD3,
//       0xED, 0x08, 0xD8, 0x4D,
//       0x1E, 0xB1, 0xA2, 0x6C,
//       0x6F, 0x56, 0x36, 0xDD,
//       0xD7, 0x92, 0x67, 0x40  },
//   {   0x3A, 0xD3, 0xAB, 0x5A,
//       0x5C, 0x4F, 0xD3, 0x99,
//       0xD5, 0xBF, 0xD6, 0xC7,
//       0xB7, 0x21, 0xB2, 0x6A,
//       0x57, 0xBC, 0xC6, 0x65,
//       0x53, 0x46, 0xD5, 0x4C,
//       0x29, 0xA9, 0xAC, 0xBE,
//       0xA1, 0x6A, 0x63, 0x9A,
//       0xC0, 0x43, 0xA5, 0x9C,
//       0x83, 0x9B, 0x8F, 0xBA,
//       0x28, 0xA7, 0x4B, 0xEF,
//       0xC7, 0xF7, 0x3F, 0x77,
//       0x80, 0x87, 0x9B, 0x3B,
//       0xE9, 0x9E, 0x2C, 0x02,
//       0x96, 0x01, 0xD1, 0x7C,
//       0x1F, 0xAD, 0x5A, 0x5A,
//       0xE0, 0xE0, 0x47, 0xED,
//       0xE8, 0x28, 0xF8, 0x79,
//       0x78, 0xED, 0xF7, 0xE3,
//       0x15, 0x88, 0x03, 0x05,
//       0xC3, 0x3C, 0x97, 0xA9,
//       0x1B, 0x1E, 0xF5, 0x26,
//       0x75, 0xB1, 0x03, 0x8A,
//       0x28, 0xC2, 0xAB, 0xCC,
//       0x4D, 0x38, 0x37, 0x93,
//       0xEA, 0xFB, 0x51, 0x77,
//       0xA8, 0xC3, 0x48, 0x64,
//       0xA2, 0xDD, 0x69, 0x09,
//       0xB3, 0x64, 0x58, 0x1C,
//       0x5B, 0x1B, 0xCC, 0x6B,
//       0xDD, 0x3A, 0x3E, 0xBC,
//       0x72, 0xFA, 0x8D, 0xBF,
//       0xD2, 0x54, 0xAE, 0xF6,
//       0x74, 0xE7, 0xF8, 0xAF,
//       0x40, 0x4E, 0x34, 0x01,
//       0xE1, 0x95, 0x06, 0xCE,
//       0x6F, 0x35, 0x01, 0x27,
//       0x61, 0xE7, 0xBB, 0x34,
//       0xA0, 0x51, 0x2F, 0xA0,
//       0xE0, 0xBC, 0xCF, 0xA1,
//       0x1A, 0xD4, 0xD0, 0xD5,
//       0x03, 0xC6, 0x8D, 0xE0,
//       0xF7, 0x43, 0xF2, 0x27,
//       0xBF, 0x15, 0x0F, 0x9B,
//       0xFA, 0xCE, 0xC2, 0x12,
//       0xB6, 0xE3, 0x10, 0xCB,
//       0xE0, 0x16, 0x4C, 0x32,
//       0x9F, 0xE0, 0xD3, 0x89,
//       0x1B, 0x4B, 0xC5, 0xC3,
//       0xDF, 0x9B, 0xE6, 0x0F,
//       0xE5, 0x1E, 0xCE, 0xCD,
//       0x16, 0xFD, 0x84, 0xF6,
//       0xF5, 0xA6, 0x93, 0x56,
//       0xAC, 0x5A, 0x6E, 0x88,
//       0xDE, 0x81, 0x4C, 0x71,
//       0xE6, 0x32, 0x45, 0xC3,
//       0xC9, 0x62, 0xBB, 0x35,
//       0x71, 0xB2, 0xB6, 0xCD,
//       0x53, 0x16, 0x38, 0x25,
//       0xBA, 0xF7, 0x77, 0x20,
//       0x85, 0x8A, 0x7A, 0x4C,
//       0x19, 0x02, 0x01, 0xD6,
//       0x90, 0xA6, 0x3F, 0xC2,
//       0xB7, 0xCE, 0x57, 0x3A
//       }
//};
#endif
